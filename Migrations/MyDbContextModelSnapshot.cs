// <auto-generated />
using System;
using Lab15_Misyuro.Kirill_CodeFirstAndMigrations.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab15_Misyuro.Kirill_CodeFirstAndMigrations.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lab15_Misyuro.Kirill_CodeFirstAndMigrations.Entity.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("Enployee_PK");

                    b.HasIndex("PositionId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Lab15_Misyuro.Kirill_CodeFirstAndMigrations.Entity.Journal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("VisitorId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("Journal_PK");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RoomId");

                    b.HasIndex("VisitorId");

                    b.ToTable("Journal");
                });

            modelBuilder.Entity("Lab15_Misyuro.Kirill_CodeFirstAndMigrations.Entity.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Rate")
                        .HasColumnType("real");

                    b.Property<float>("Salary")
                        .HasColumnType("real");

                    b.HasKey("Id")
                        .HasName("Position_PK");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("Lab15_Misyuro.Kirill_CodeFirstAndMigrations.Entity.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("Room_PK");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("Lab15_Misyuro.Kirill_CodeFirstAndMigrations.Entity.Visitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("Visitor_PK");

                    b.ToTable("Visitor");
                });

            modelBuilder.Entity("Lab15_Misyuro.Kirill_CodeFirstAndMigrations.Entity.Employee", b =>
                {
                    b.HasOne("Lab15_Misyuro.Kirill_CodeFirstAndMigrations.Entity.Position", "Position")
                        .WithMany("Employes")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Employee_Position");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Lab15_Misyuro.Kirill_CodeFirstAndMigrations.Entity.Journal", b =>
                {
                    b.HasOne("Lab15_Misyuro.Kirill_CodeFirstAndMigrations.Entity.Employee", "Employee")
                        .WithMany("Journals")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Journal_Employee");

                    b.HasOne("Lab15_Misyuro.Kirill_CodeFirstAndMigrations.Entity.Room", "Room")
                        .WithMany("Journals")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Journal_Room");

                    b.HasOne("Lab15_Misyuro.Kirill_CodeFirstAndMigrations.Entity.Visitor", "Visitor")
                        .WithMany("Journals")
                        .HasForeignKey("VisitorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Journal_Visitor");

                    b.Navigation("Employee");

                    b.Navigation("Room");

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("Lab15_Misyuro.Kirill_CodeFirstAndMigrations.Entity.Employee", b =>
                {
                    b.Navigation("Journals");
                });

            modelBuilder.Entity("Lab15_Misyuro.Kirill_CodeFirstAndMigrations.Entity.Position", b =>
                {
                    b.Navigation("Employes");
                });

            modelBuilder.Entity("Lab15_Misyuro.Kirill_CodeFirstAndMigrations.Entity.Room", b =>
                {
                    b.Navigation("Journals");
                });

            modelBuilder.Entity("Lab15_Misyuro.Kirill_CodeFirstAndMigrations.Entity.Visitor", b =>
                {
                    b.Navigation("Journals");
                });
#pragma warning restore 612, 618
        }
    }
}
